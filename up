#!/usr/bin/bash

SCRIPTNAME=$0
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH

#find the local IP address (use the interface of the default route)
default_dev=$(ip route list | awk '$1 == "default" {print $5}')
IP_addr=$(ip addr show dev $default_dev | awk '$1 == "inet" {print $2}' | cut -d/ -f1)

function help {
  echo "[USAGE] $SCRIPTNAME -v tyk-version -i index-number -h"
  echo "        -v tyk version of sandbox image. Defaults to 'latest'"
  echo "        -i index number"
  echo "        -h print this help"
}

function nextFree {
  existing=$(docker container list -a | awk '$NF ~ /^sandbox-/ {print $NF}')
  for i in $(seq 1 1000) 
  do
    test="sandbox-$i"
    if ! echo $existing | grep -qw $test
    then
      echo $i
      break
    fi
  done
}

if [[ $# -lt 1 ]]
then
  help
  exit 1
fi

while getopts :i:v: arg
do
  case $arg in
    i)
      index=$OPTARG
      ;;
    v)
      tykVersion=$OPTARG
      ;;
    h)
      help
      exit 0;
      ;;
    :)
      echo "Option -$OPTARG requires an arguement."
      exit 1
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      exit 1
      ;;
  esac
done

if [[ ! -n $tykVersion ]]
then
  tykVersion=latest
fi

if [[ ! -n $index ]]
then
  index=$(nextFree)
fi

SandboxPluginDir=/home/pstubbs/tyk/plugins
SandboxCertDir=/home/pstubbs/tyk/certs

offset=$(($index-1))
#hostFQDN=192.168.1.182
hostFQDN=$IP_addr
dashboardPort=$((3000+$offset))
gatewayPort=$((8080+$offset))
#TIBPort=$((3010+$offset))
containerName=sandbox-$index
label=$containerName
dashboardURL=http://$hostFQDN:$dashboardPort/
gatewayURL=https://$hostFQDN:$gatewayPort/
#tibURL=http://$hostFQDN:$TIBPort/
if [[ $tykVersion != "latest" && ! -d $SandboxPluginDir/$tykVersion ]]
then
  echo "[WARN]Creating $SandboxPluginDir/$tykVersion: It will be empty"
  mkdir -p $SandboxPluginDir/$tykVersion
fi
echo "[INFO]Creating container $containerName"
docker container create --name $containerName \
  --publish $dashboardPort:3000 \
  --publish $gatewayPort:8080 \
  --env TYK_GW_PORT=$gatewayPort \
  --env TYK_GW_HOST=$hostFQDN \
  --env TYK_DSHB_HOST=$hostFQDN \
  --label sandbox.label=$label \
  --label sandbox.version=$tykVersion \
  --label sandbox.dashurl=$dashboardURL \
  --label sandbox.gateurl=$gatewayURL \
  --label sandbox.index=$index \
  --volume $SandboxPluginDir/$tykVersion:/opt/tyk-plugins \
  --volume $SandboxCertDir:/opt/tyk-certificates \
  tyk-sandbox:$tykVersion
if [[ $? -eq 0 ]]
then
  echo "[INFO]Starting container $containerName"
  docker container start $containerName
  docker container inspect -f '{{ range $k, $v := .Config.Labels }}{{ $k }}: {{ println $v }}{{ end }}' $containerName
fi
